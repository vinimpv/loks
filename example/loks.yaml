name: loks
components:
  - name: redis
    image: redis:latest
    deployments:
      - name: redis
        ports:
          - port: 6379
            hostPort: 6379

  - name: postgres
    image: postgres:latest
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    deployments:
      - name: postgres
        ports:
          - port: 5432
            hostPort: 5432
        livenessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
              - -d
              - postgres
          initialDelaySeconds: 3
          periodSeconds: 3

  - name: localstack
    image: localstack/localstack:latest
    post_deploy_script: |
      aws --endpoint-url=${AWS_ENDPOINT_URL} s3 mb s3://${AWS_S3_BUCKET_NAME}
    deployments:
      - name: localstack
        ports:
          - port: 4566
            hostPort: 4566
    env:
      SERVICES: s3
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_S3_BUCKET_NAME: loks
      AWS_ENDPOINT_URL: http://localstack.default.svc.cluster.local:4566

  - name: backend
    skip_image_pull: true
    build_dev: |
      docker build -t backend:dev .
    pre_deploy_script: |
      sleep 5
      echo "Migration completed"
    env:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
    deployments:
      - name: backend
        ports:
          - port: 8000
        mount_path: /app
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 3
    dependencies:
      - redis
      - postgres
      - localstack

  - name: frontend
    skip_image_pull: true
    build_dev: |
      docker build -t frontend:dev .
    deployments:
      - name: frontend
        ports:
          - port: 80
        mount_path: /app
    dependencies:
      - backend
